{"version":3,"sources":["components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","components/PropTypes/CurrentUserType.js","api/api.js","App.jsx","index.js"],"names":["TodoList","todos","selectUser","query","status","filteredTodos","filter","todo","title","toLowerCase","includes","completed","className","map","key","id","cn","type","checked","readOnly","onClick","userId","CurrentUser","PropTypes","string","isRequired","number","func","name","email","phone","onClear","defaultProps","App","state","selectedUserId","user","setState","clearUser","fetch","then","res","json","data","this","onChange","event","target","value","placeholder","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f908891c.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nexport const TodoList = ({\n  todos,\n  selectUser,\n  query,\n  status,\n}) => {\n  let filteredTodos = todos.filter(\n    todo => todo.title.toLowerCase().includes(query.toLowerCase()),\n  );\n\n  if (status === 'completed') {\n    filteredTodos = filteredTodos.filter(todo => todo.completed);\n  } else if (status === 'active') {\n    filteredTodos = filteredTodos.filter(todo => !todo.completed);\n  }\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\">\n          {filteredTodos.map(todo => (\n            <li\n              key={todo.id}\n              className={cn({\n                'TodoList__item TodoList__item--checked': todo.completed,\n                'TodoList__item TodoList__item--unchecked': !todo.completed,\n              })}\n            >\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={todo.completed}\n                  readOnly\n                />\n                <p>{todo.title}</p>\n              </label>\n              <button\n                className=\"TodoList__user-button button\"\n                type=\"button\"\n                onClick={() => selectUser(todo.userId)}\n              >\n                User&nbsp;\n                {todo.userId}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selectUser: PropTypes.func.isRequired,\n  query: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { CurrentUserType } from '../PropTypes/CurrentUserType';\nimport './CurrentUser.scss';\n\nexport const CurrentUser = ({ name, id, email, phone, onClear }) => (\n  <div className=\"CurrentUser\">\n    <h2 className=\"CurrentUser__title\">\n      <span>\n        Selected user:\n        {id}\n      </span>\n    </h2>\n\n    <h3 className=\"CurrentUser__name\">{name}</h3>\n    <p className=\"CurrentUser__email\">{email}</p>\n    <p className=\"CurrentUser__phone\">{phone}</p>\n\n    <button\n      type=\"button\"\n      onClick={onClear}\n    >\n      Clear\n    </button>\n  </div>\n);\n\nCurrentUser.propTypes = CurrentUserType;\n\nCurrentUser.defaultProps = {\n  id: 0,\n  name: '',\n  email: '',\n  phone: '',\n};\n","import PropTypes from 'prop-types';\n\nexport const CurrentUserType = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  email: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  onClear: PropTypes.func.isRequired,\n};\n","const API_TODOS = 'https://mate-api.herokuapp.com/todos';\nconst API_USERS = 'https://mate-api.herokuapp.com/users';\n\nexport const getTodos = () => (\n  fetch(API_TODOS)\n    .then(res => res.json())\n);\n\nexport const getUsers = userId => (\n  fetch(`${API_USERS}/${userId}`)\n    .then(res => res.json())\n);\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos, getUsers } from './api/api';\n\nclass App extends React.PureComponent {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n    user: {},\n    status: 'all',\n    query: '',\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then((res) => {\n        this.setState({\n          todos: res.data.filter(todo => (\n            todo.title && todo.id\n          )),\n        });\n      });\n  }\n\n  componentDidUpdate() {\n    if (this.state.selectedUserId !== 0\n      && this.state.selectedUserId !== this.state.user.id\n      && this.state.selectedUserId) {\n      getUsers(this.state.selectedUserId)\n        .then((user) => {\n          if (user.data !== null) {\n            this.setState({\n              user: user.data,\n            });\n          } else {\n            this.setState(state => ({ user: {\n              id: state.selectedUserId,\n              name: 'No name',\n              email: 'No email',\n              phone: 'No Name',\n            } }));\n          }\n        });\n    }\n  }\n\n  selectUser = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  }\n\n  clearUser = () => {\n    this.setState({\n      user: {},\n      selectedUserId: 0,\n    });\n  }\n\n  render() {\n    const { todos, selectedUserId, query, status, user } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <select\n            onChange={event => this.setState({ status: event.target.value })\n            }\n          >\n            <option value=\"all\">\n              All\n            </option>\n            <option value=\"active\">\n              Active\n            </option>\n            <option value=\"completed\">\n              Completed\n            </option>\n          </select>\n\n          <input\n            type=\"text\"\n            placeholder=\"Find todo\"\n            onChange={event => this.setState({ query: event.target.value })}\n          />\n\n          <TodoList\n            todos={todos}\n            selectUser={this.selectUser}\n            query={query}\n            status={status}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId && user ? (\n              <CurrentUser\n                {...user}\n                onClear={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}